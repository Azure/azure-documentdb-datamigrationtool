<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountEndpointMissing" xml:space="preserve">
    <value>DocumentDB account end-point URL should be provided as part of the connection string</value>
  </data>
  <data name="AccountKeyMissing" xml:space="preserve">
    <value>DocumentDB account key should be provided as part of the connection string</value>
  </data>
  <data name="AmbiguousQuery" xml:space="preserve">
    <value>Both Query and QueryFile cannot be set at the same time</value>
  </data>
  <data name="BufferSlotIsOccupied" xml:space="preserve">
    <value>Failed to buffer an item, slot is already occupied</value>
  </data>
  <data name="BulkSinkDescription" xml:space="preserve">
    <value>Uploads data into one or more single partition DocumentDB collections in batches</value>
  </data>
  <data name="CollectionNameMissing" xml:space="preserve">
    <value>Documents collection name is required</value>
  </data>
  <data name="ConnectionStringMissing" xml:space="preserve">
    <value>DocumentDB connection string is required</value>
  </data>
  <data name="CustomUserAgentSuffixFormat" xml:space="preserve">
    <value>{0}-{1}-{2}-{3}{4}</value>
  </data>
  <data name="DataItemAlreadyContainsField" xml:space="preserve">
    <value>Data item already contains field "{0}"</value>
  </data>
  <data name="FailedToCreateCollectionFormat" xml:space="preserve">
    <value>Failed to create documents collection "{0}"</value>
  </data>
  <data name="FailedToCreateDatabaseFormat" xml:space="preserve">
    <value>Failed to create documents database "{0}"</value>
  </data>
  <data name="FailedToCreateDocumentFormat" xml:space="preserve">
    <value>Failed to create document: {0}</value>
  </data>
  <data name="FailedToCreateStoredProcedureFormat" xml:space="preserve">
    <value>Failed to create stored procedure "{0}"</value>
  </data>
  <data name="InvalidBatchSize" xml:space="preserve">
    <value>Batch size should be greater than zero</value>
  </data>
  <data name="InvalidMaxScriptSize" xml:space="preserve">
    <value>Max script size should be greater than zero</value>
  </data>
  <data name="InvalidNumberOfParallelRequests" xml:space="preserve">
    <value>Number of parallel requests should be greater than zero</value>
  </data>
  <data name="InvalidNumberOfRetries" xml:space="preserve">
    <value>Number of retries should be greater than zero</value>
  </data>
  <data name="InvalidRetryInterval" xml:space="preserve">
    <value>Retry interval cannot be negative</value>
  </data>
  <data name="ParallelSinkDescription" xml:space="preserve">
    <value>Uploads data into partitioned DocumentDB collection</value>
  </data>
  <data name="SinkIsNotInitialized" xml:space="preserve">
    <value>DocumentDB sink adapter should be initialized before it can be used</value>
  </data>
  <data name="SourceDescription" xml:space="preserve">
    <value>Reads data from DocumentDB collections</value>
  </data>
  <data name="SourceIsNotInitialized" xml:space="preserve">
    <value>DocumentDB source adapter should be initialized before it can be used</value>
  </data>
  <data name="DocumentSizeExceedsBulkScriptSize" xml:space="preserve">
    <value>Document cannot be indexed in bulk because it exceeds specified script size limit</value>
  </data>
  <data name="OperationNotSupportedFormat" xml:space="preserve">
    <value>Operation "{0}" is not supported</value>
  </data>
  <data name="UnexpectedCharacterFormat" xml:space="preserve">
    <value>Unexpected character at position {0}: "{1}"</value>
  </data>
  <data name="DocumentIsNotDataItem" xml:space="preserve">
    <value>Input does not represent a valid document</value>
  </data>
  <data name="FailedToExtractPartitionKeyFormat" xml:space="preserve">
    <value>Failed to extract partition ket: {0}</value>
  </data>
  <data name="ShardedImportDesignator" xml:space="preserve">
    <value>-Sharded</value>
  </data>
  <data name="UnexpectedPartitionCollectionFormat" xml:space="preserve">
    <value>Partition collection "{0}" is not expected</value>
  </data>
  <data name="FailedToReadSubstituionFormat" xml:space="preserve">
    <value>Failed to read substitution: {0}</value>
  </data>
  <data name="FailedToReadJavascriptMemberExpressionFormat" xml:space="preserve">
    <value>Failed to read javascript member expression: {0}</value>
  </data>
  <data name="NotANumberFormat" xml:space="preserve">
    <value>Value "{0}" does not represent a valid number</value>
  </data>
  <data name="InvalidRangeFormat" xml:space="preserve">
    <value>Range from {0} to {1} is not valid</value>
  </data>
  <data name="UnexpectedAsyncFlushErrorMessageFormat" xml:space="preserve">
    <value>Failed to persist documents bulk: {0}</value>
  </data>
  <data name="UnknownEntryAssembly" xml:space="preserve">
    <value>dtr</value>
  </data>
  <data name="AmbiguousIndexingPolicy" xml:space="preserve">
    <value>Both IndexingPolicy and IndexingPolicyFile cannot be set at the same time</value>
  </data>
  <data name="ImportErrorActivityIdFormat" xml:space="preserve">
    <value>{0}ActivityId: {1}</value>
  </data>
  <data name="InvalidCollectionThroughput" xml:space="preserve">
    <value>Collection throughput should be greater than zero</value>
  </data>
</root>